name: Infra apply & destroy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "destroy" to confirm'
        required: true

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::557548602903:role/mytestrole-OIDC
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Test
        run: terraform test
        continue-on-error: true

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan (non-dispatch)
        if: github.event_name != 'workflow_dispatch'
        run: terraform plan -var-file="terraform.tfvars"

      - name: Lint Terraform Code with TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init
          tflint --config .tflint.hcl

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov (soft fail)
        run: checkov --directory . --soft-fail

      - name: Generate Terraform Docs (README.md)
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: terraform-docs/gh-actions@v1.3.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: true
          config-file: .terraform-docs.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Post Terraform Docs as PR Comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          working-dir: .
          github_token: ${{ secrets.GITHUB_TOKEN }}
          header: "Terraform Documentation"
          path: ./README.md

      - name: Generate tfplan.json for OPA
        run: |
          terraform plan -var-file="terraform.tfvars" -out=tfplan.binary
          terraform show -json tfplan.binary > tfplan.json

      - name: Install Conftest
        run: |
          wget https://github.com/open-policy-agent/conftest/releases/download/v0.51.0/conftest_0.51.0_Linux_x86_64.tar.gz
          tar xzf conftest_0.51.0_Linux_x86_64.tar.gz
          sudo mv conftest /usr/local/bin/

      - name: Run OPA Policy Check
        run: conftest test tfplan.json --policy policies/

      - name: Terraform Apply (on push to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -var-file="terraform.tfvars" -auto-approve

      - name: Terraform Destroy (manual)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.confirm_destroy == 'destroy'
        run: terraform destroy -var-file="terraform.tfvars" -auto-approve
